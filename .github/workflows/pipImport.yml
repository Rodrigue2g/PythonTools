name: Update Pip Import File
on:
  push:
    branches: ['main']
    paths:
      - 'src/**'
      - '!src/docs/**'
jobs:
  get_files:
    runs-on: ubuntu-latest
    outputs:
      files_output: ${{ steps.check_files.outputs.files }}
      pip_files_output: ${{ steps.check_pip_files.outputs.files }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Print repository name
        run: echo "Running in repository $GITHUB_REPOSITORY"
      - name: Check for new files
        id: check_files
        run: |
          git fetch --depth=1 origin main
          files=$(git diff --name-only HEAD..origin/main src/)
          if [[ -z "$files" ]]; then
            echo "No new files"
          else
            echo "New files:"
            echo "$files"
            echo "{files}={$files}" >> $GITHUB_OUTPUT
          fi
      - name: Check for new files in pipImport.py
        id: check_pip_files
        run: |
            pip_files=["test"]
            if [[ -z "$pip_files" ]]; then
               echo "No new files"
            else
               echo "{$pip_files}"
               echo "files=$pip_files" >> "$GITHUB_OUTPUT"
            fi
  update:
    runs-on: ubuntu-latest
    needs: get_files
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - env:
          OUTPUT1: ${{needs.get_files.outputs.files_output}}
          OUTPUT2: ${{needs.get_files.outputs.pip_files_output}}
        run: echo "$OUTPUT1 $OUTPUT2"
      - name: Add new file names to pipImport.py
        run: |
          src_files="$OUTPUT1"
          pip_files="$OUTPUT2"
          echo $pip_files
          for file in $pip_files; do
            if ! grep -q "$file" pipImport.py; then
              echo "httpimport.remote_repo(['$file'], 'https://raw.githubusercontent.com/${{ github.repository }}/main/src/$file')" >> pipImport.py
            fi
          done
